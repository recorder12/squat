{"version":3,"sources":["fbase.js","routes/Home.js","routes/Auth.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebaseConfig","apiKey","process","authDomain","databaseURL","REACT_APP_DATABASE_URL","projectId","storageBucket","messagingSenderId","REACT_APP_MESSAGIN_ID","appId","firebase","initializeApp","model","webcam","ctx","firebaseInstance","authService","auth","dbService","firestore","Auth","useState","onSocialClick","event","a","name","target","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","className","class","onClick","URL","status","sentence","count","modelURL","metadataURL","size","d","Date","Home","userObj","scoreDisplay","document","getElementById","sentenceDisplay","nweets","setNweets","getNweets","collection","orderBy","limit","get","forEach","nweetObject","data","id","prev","useEffect","displayName","tmPose","getTotalClasses","innerHTML","setup","play","window","requestAnimationFrame","loop","canvas","width","height","getContext","timestamp","update","predict","estimatePose","pose","posenetOutput","prediction","probability","toFixed","drawPose","drawImage","keypoints","add","text","createdAt","toUTCString","creatorId","uid","nickname","createdTime","now","location","reload","onSnapshot","snapshot","nweetArray","docs","map","doc","type","nweet","style","marginTop","history","useHistory","newDisplayName","setNewDisplayName","onSubmit","preventDefault","updateProfile","onChange","value","placeholder","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","AppRouter","isLoggedIn","exact","path","Profile","App","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","user","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f0edf105.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\n\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\n","import React, { useState, useEffect } from \"react\";\nimport { dbService } from \"fbase\";\nimport * as tf from '@tensorflow/tfjs';\nimport * as tmPose from '@teachablemachine/pose';\n\n\nconst URL = \"https://teachablemachine.withgoogle.com/models/aj8L1qvCM/\";\nlet model, webcam, ctx, labelContainer, maxPredictions;\nvar status = \"stand\";\nvar sentence = \"Ready!!\";\nconst success = [\"가즈아!\", \"성공!\", \"좋아좋아!\", \"달려! 달려!\", \"헛뜨아!\", \"다리 지방이 타들어간다!\", \"고지가 코앞이다!\"];\nconst fail = [\"다시!\", \"자세 불량!\", \"회원님 이건 무효에요\", \"회원님 그러다 허리 다쳐요\", \"복근에 힘 빡 주고 다시!\"];\nvar count = 0;\nconst modelURL = URL + \"model.json\";\nconst metadataURL = URL + \"metadata.json\";\nconst size = 450;\nconst flip = true; // whether to flip the webcam\nvar d = new Date();\n\n\n\nconst Home = ({ userObj }) => {\n  var scoreDisplay = document.getElementById(\"score\");\n  var sentenceDisplay = document.getElementById(\"sentence\");\n\n  const [nweet, setNweet] = useState(\"\");\n  const [nweets, setNweets] = useState([]);\n  const getNweets = async () => {\n    const dbNweets = await dbService.collection(\"nweets\").orderBy(\"text\").limit(20).get();\n    dbNweets.forEach((document) => {\n      const nweetObject = {\n        ...document.data(),\n        id: document.id,\n      };\n      setNweets((prev) => [nweetObject, ...prev]);\n    });\n\n  };\n  useEffect(() => {\n    getNweets();\n  }, []);\n\n\n\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  useEffect(() => {\n    dbService.collection(\"nweets\").onSnapshot((snapshot) => {\n      const nweetArray = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setNweets(nweetArray);\n    });\n  }, []);\n  \n  //AI part\n  async function init() {\n\n    // load the model and metadata\n    // Refer to tmImage.loadFromFiles() in the API to support files from a file picker\n    // Note: the pose library adds a tmPose object to your window (window.tmPose)\n    model = await tmPose.load(modelURL, metadataURL);\n    maxPredictions = model.getTotalClasses();\n\n    //score and sentence display seeting \n    scoreDisplay = document.getElementById(\"score\");\n    sentenceDisplay = document.getElementById(\"sentence\");\n    sentence = \"Start!!\";\n    sentenceDisplay.innerHTML = sentence;\n  \n    // Convenience function to setup a webcam\n    webcam = new tmPose.Webcam(size, size, flip); // width, height, flip\n    await webcam.setup(); // request access to the webcam\n    await webcam.play();\n    window.requestAnimationFrame(loop);\n    d = new Date();\n  \n    // append/get elements to the DOM\n    const canvas = document.getElementById(\"canvas\");\n    canvas.width = size; canvas.height = size;\n    ctx = canvas.getContext(\"2d\");\n    // labelContainer = document.getElementById(\"label-container\");\n    // for (let i = 0; i < maxPredictions; i++) { // and class labels\n    //     labelContainer.appendChild(document.createElement(\"div\"));\n    // }\n  }    \n    async function loop(timestamp) {\n      webcam.update(); // update the webcam frame\n      await predict();\n      window.requestAnimationFrame(loop);\n  }\n\n  async function predict() {\n    scoreDisplay = document.getElementById(\"score\");\n    sentenceDisplay = document.getElementById(\"sentence\");\n      // Prediction #1: run input through posenet\n      // estimatePose can take in an image, video or canvas html element\n      const { pose, posenetOutput } = await model.estimatePose(webcam.canvas);\n      // Prediction 2: run input through teachable machine classification model\n      const prediction = await model.predict(posenetOutput);\n      if(prediction[0].probability.toFixed(2) > 0.9){\n        if(status === \"squat\"){\n          count++;\n          sentence = \"Success!\";\n          // sentence = success[Math.floor(Math.random() * success.length)];\n          scoreDisplay.innerHTML=count;\n          sentenceDisplay.innerHTML=sentence;\n        }\n        status = \"stand\";\n      }else if(prediction[1].probability.toFixed(2) > 0.9){\n        status = \"squat\";\n        sentenceDisplay.innerHTML=\"Squat!\";\n      }else if(prediction[2].probability.toFixed(2) > 0.9 && status != \"squat\"){\n        if(status === \"squat\" || status === \"stand\" ){\n          // sentence = fail[Math.floor(Math.random() * fail.length)];\n          sentenceDisplay.innerHTML=\"Benting...checking pose!\";\n        }\n      }\n      else{\n        sentenceDisplay.innerHTML=sentence = \"Watching... \";\n      }\n\n      drawPose(pose);\n  }\n\n  function drawPose(pose) {\n      if (webcam.canvas) {\n          ctx.drawImage(webcam.canvas, 0, 0);\n          // draw the keypoints and skeleton\n          if (pose) {\n              const minPartConfidence = 0.5;\n              tmPose.drawKeypoints(pose.keypoints, minPartConfidence, ctx);\n              tmPose.drawSkeleton(pose.keypoints, minPartConfidence, ctx);\n          }\n      }\n  }\n\n  async function end(){\n    await dbService.collection(\"nweets\").add({\n      text: count, createdAt: d.toUTCString(),\n    creatorId: userObj.uid,\n    nickname: userObj.displayName,\n    createdTime: Date.now()\n    })\n\n    count = 0;\n    status = \"stand\";\n    window.location.reload();\n  }\n\n  return (\n    <div>\n  \n      <div className=\"guide_box\">\n        <div className=\"guide1\">Step1) Start 버튼을 눌러 스쿼트를 시작하세요!!</div>\n        <div className=\"guide2\">Step2) 왼쪽을 바라보고 정자세로 스쿼트를 하시면 갯수가 카운트됩니다!!</div>\n        <div className=\"guide3\">Step3) 운동을 마친 후 End를 누리시면 당신의 기록이 갱신됩니다!!</div>\n      </div>\n\n      <div className=\"main_box\">\n        <div className=\"screen\">\n          <button type=\"button\" className=\"start\" onClick={init}>Start</button>\n          <button type=\"button\" className=\"end\" onClick={end}>End</button>\n          <div><canvas id=\"canvas\"></canvas></div>\n          {/* <div id=\"label-container\"></div> */}\n        </div>\n\n        <div className=\"score-container\">\n            <div className=\"sentence\" >\n              <span id=\"sentence\">{sentence}</span>\n            </div>\n            <div className=\"score\" id=\"score\">\n              <span id=\"sentence\">{count}</span>\n            </div>\n        </div>\n      </div>\n\n\n     \n      <div className=\"addthis_inline_share_toolbox_k4ye\"></div>\n            \n\n      <div className=\"container\">\n        {nweets.map((nweet) => (\n          <div style={{marginTop:10}} className=\"feed\" key={nweet.id}>\n            <h4>{nweet.nickname + \"  did squat totally \" + nweet.text + \" counts (\" + nweet.createdAt + \")\" }</h4>\n          </div>\n        ))}\n      </div>\n\n    </div>\n\n    \n  );\n};\nexport default Home;\n\n\n\n//To do list\n// 1) getting data with limitation and sorting with date\n// 2) getting data with limitation and sorting with counts\n// 3) input voices with scores","import React, { useState } from \"react\";\nimport { authService, firebaseInstance } from \"fbase\";\n\nconst Auth = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n      \n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    const data = await authService.signInWithPopup(provider);\n    \n  };\n  return (\n    <div className=\"login_page\">\n      {/* <form onSubmit={onSubmit}>\n        <input\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={onChange}\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={onChange}\n        />\n        <input\n          type=\"submit\"\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\n        />\n        {error}\n      </form>\n      <span onClick={toggleAccount}>\n        {newAccount ? \"Sign In\" : \"Create Account\"}\n      </span> */}\n\n\n      <div class=\"title\">Who is Squat King in this ground?! </div>\n      <div class=\"description\">(Squat Competetion with AI)</div>\n      <div class=\"auth\">\n        <button className=\"google\" onClick={onSocialClick} name=\"google\">\n          Continue with Google\n        </button>\n        <button className=\"github\" onClick={onSocialClick} name=\"github\">\n          Continue with Github\n        </button>\n      </div>\n    </div>\n  );\n};\nexport default Auth;","import React, { useState } from \"react\";\nimport { authService } from \"fbase\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default ({ userObj }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n    }\n  };\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <input\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"Display name\"\n          value={newDisplayName}\n        />\n        <input type=\"submit\" value=\"Update Profile\" />\n      <button onClick={onLogOutClick}>Log Out</button>\n      </form>\n    </>\n  );\n};","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Navigation = ({ userObj }) => (\n  <nav className=\"nav\">\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n      <li className=\"home_link\">\n        <Link to=\"/\" style={{ marginRight: 10 }}>Home</Link>\n      </li>\n      <li className=\"profile_link\">\n        <Link to=\"/profile\"  style={{\n            marginLeft: 10,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\"\n          }}>Profile</Link>\n      </li>\n    </ul>\n  </nav>\n);\nexport default Navigation;","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Profile from \"routes/Profile\";\nimport Navigation from \"components/Navigation\";\n\nconst AppRouter = ({ isLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <>\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile userObj={userObj} />\n            </Route>\n          </>\n        ) : (\n          <>\n            <Route exact path=\"/\">\n              <Auth />\n            </Route>\n          </>\n        )}\n      </Switch>\n    </Router>\n  );\n};\nexport default AppRouter;","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setIsLoggedIn(true);\n        setUserObj(user);\n      } else {\n        setIsLoggedIn(false);\n      }\n      setInit(true);\n    });\n  }, []);\n  return (\n    <>\n      {init ? (\n        <AppRouter isLoggedIn={isLoggedIn} userObj={userObj} />\n      ) : (\n        \"Initializing...\"\n      )}\n    </>\n  );\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n\n\n"],"sourceRoot":""}